#!/bin/groovy

pipeline {

    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    stages {

        stage('Build artifacts') {
            steps {
                script {
                    // pulls .DEPS_IMAGE_NDAME with npm pkgs and creates simlink for node_modules from WORKDIR /www so that npm scripts can be executed
                    docker.image('jonlazarini/poll-app-deps:latest').inside {
                        sh 'ln -s /www/node_modules .'
                        sh 'npm run report:test'
                        sh 'npm run build'
                        // store build assets for next stage
                        stash includes: 'build/**/*', name: 'build'
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("${env.DOCKERHOST}",'nexusCredentials') {
                        // drop build assets
                        unstash 'build'
                        // builds .IMAGE_NAME with build/ assets and nginx to serve it
                        docker
                           // Dockerfile
                          .build("jonlazarini/poll-app", '--pull --no-cache .')
                          .push()
                    }
                }
            }
        }

    }

    post {
        always {
            deleteDir()
        }
    }
}